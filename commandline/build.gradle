
buildscript {
    ext.kotlin_version = '1.9.25'
    ext.boot_version = "3.3.13"
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springVersion}"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "${kotlin_version}"
    id "org.jetbrains.kotlin.plugin.spring" version "${kotlin_version}"
    id 'org.jetbrains.kotlin.plugin.serialization' version "${kotlin_version}"
    id "idea"
    id "java-library"
    id "maven-publish"
}

group "io.opencui.dispatcher"
version '1.0-SNAPSHOT'

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "17"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "17"
    }
}

repositories {
    maven { url 'https://repository.jboss.org/nexus/content/groups/public/' }
    mavenLocal()
    mavenCentral()
    flatDir {
        dirs '../../core/libs'
    }
}

dependencies {
    implementation project(":googlecalendar")
    implementation project(":meta")
    implementation('io.opencui:core') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    implementation "org.springframework.boot:spring-boot-starter-web:${boot_version}"
    implementation "org.springframework.boot:spring-boot-starter-actuator:${boot_version}"
    implementation "org.springframework.boot:spring-boot-starter-webflux:${boot_version}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-compiler"
    implementation "com.fasterxml.jackson.core:jackson-core"
    implementation "com.fasterxml.jackson.core:jackson-annotations"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml"
    implementation "redis.clients:jedis:3.2.0"
}

jar.enabled = true

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}
